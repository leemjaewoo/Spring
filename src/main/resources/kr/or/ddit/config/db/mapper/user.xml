<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">


	<select id="getAllUser" resultType="UserVO">
		select * from users
	</select>


	<select id="selectUser" resultType="UserVO"
		parameterType="String">
		select * from users where userid = #{userId}
	
	</select>


	<!-- 사용자 페이지 조회 -->
	
	
	 <select id="selectUserPagingList" resultType="UserVO"
		parameterType="PageVO">

				select *
				from
				(
				select a.*, rownum rn
				from
				(select users.*
				from users
				order by userid) a )
				a
			
				where rn between (#{page}-1) * #{pageSize}+1 and #{page}*#{pageSize}
			</select>
			
			
			<!-- 전체 사용자 수 조회 -->
			<select id="getUserCnt" resultType="Integer">
			select count(*)
				from users
			</select>
			
			<!-- 사용자 입력 -->
			<insert id="insertUser" parameterType="userVO">
			insert into users
			(userId, userNm, alias, addr1, addr2, zipcode, pass, reg_dt, filename, realFilename)
  			  values (#{userId},#{userNm},#{alias},#{addr1},#{addr2},#{zipcode},#{pass},sysdate,
  			  #{filename,jdbcType=VARCHAR},
  			  #{realFilename,jdbcType=VARCHAR}
  			  )
			
			</insert>
			
			
			
			<!-- 사용자 삭제 -->
			<delete id="deleteUser" parameterType="String">
			delete from users
   			 where userid = #{userId}
			</delete>
			
			
			<!-- 사용자 입력 -->
			<!-- <update id="updateUser" parameterType="userVO">
			update users set
			userNm=#{userNm},
			alias=#{alias},
			addr1=#{addr1},
			addr2=#{addr2},
			zipcode=#{zipcode},
			pass=#{pass},
			filename=#{filename},
			realFilename=#{realFilename}
			where userId=#{userId}
			</update> -->
			
			<!-- 사용자 입력 -->
			<update id="updateUser" parameterType="userVO">
			update users set
			userNm=#{userNm},
			alias=#{alias},
			addr1=#{addr1},
			addr2=#{addr2},
			zipcode=#{zipcode},
			pass=#{pass},
			filename=nvl(#{filename,jdbcType=VARCHAR},filename),
			realFilename=nvl(#{realFilename,jdbcType=VARCHAR},realFilename)
			where userId=#{userId}
			</update>

			<update id="encryptPass" parameterType="userVO">
			update users set
			pass=#{pass}
			where userId=#{userId}
			</update>







</mapper>



